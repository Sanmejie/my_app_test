{"name": "test_login_page[test_login_001-18735704321-12345678p-成功-登录成功-1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <my_app_test.Scripts.test_login.Test_Login object at 0x000001C95E519640>, case_num = 'test_login_001', username = '18735704321', passwd = '12345678p', get_mess = '成功', expect_message = '登录成功', tag = 1\n\n    @pytest.mark.parametrize(\"case_num, username, passwd,get_mess,expect_message, tag\", get_data())\n    def test_login_page(self, case_num, username, passwd, get_mess, expect_message, tag):\n        \"\"\"\n        :param username: 用户名\n        :param passwd: 密码\n        :param get_mess: toast传参\n        :param expect_message: 预期toast消息\n        :param tag: 1 标记登陆成功用例\n        :return:\n        \"\"\"\n        # 点击登陆注册\n>       self.LP_obj.click_sy_login_btn()\n\nScripts\\test_login.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage\\login_page.py:10: in click_sy_login_btn\n    self.click_element(Page.sy_login_btn_XPATH)\nBase\\Base.py:40: in click_element\n    self.search_element(loc).click()\nBase\\Base.py:22: in search_element\n    return WebDriverWait(self.driver, timeout, poll).until(lambda x: x.find_element(*loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"58dd9aa0-188c-42aa-afe2-62b15fcaee64\")>, method = <function Base.search_element.<locals>.<lambda> at 0x000001C95E0F1430>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "description": "\n        :param username: 用户名\n        :param passwd: 密码\n        :param get_mess: toast传参\n        :param expect_message: 预期toast消息\n        :param tag: 1 标记登陆成功用例\n        :return:\n        ", "parameters": [{"name": "case_num", "value": "'test_login_001'"}, {"name": "username", "value": "'18735704321'"}, {"name": "passwd", "value": "'12345678p'"}, {"name": "get_mess", "value": "'成功'"}, {"name": "expect_message", "value": "'登录成功'"}, {"name": "tag", "value": "1"}], "start": 1606974866365, "stop": 1606974886794, "uuid": "38767145-fbcb-4387-a0fb-df75692a141f", "historyId": "ae02f08fd11a5b0c2602dc341469528e", "testCaseId": "a4a0150438cc50307e30db7582a4b9c3", "fullName": "Scripts.test_login.Test_Login#test_login_page", "labels": [{"name": "parentSuite", "value": "Scripts"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "SC-202010121356"}, {"name": "thread", "value": "26968-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Scripts.test_login"}]}